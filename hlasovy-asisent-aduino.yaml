esphome:
  name: hlasovy-asistent
  friendly_name: Atom Echo

esp32:
  board: esp32dev
  framework:
    type: arduino

logger:
api:
  encryption:
    key: "vas api key"

ota:
  platform: esphome

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Hlasovy asistent"
    password: "12345678"

i2s_audio:
  i2s_lrclk_pin: GPIO26
  i2s_bclk_pin: GPIO25

improv_serial:

button:
  - platform: factory_reset
    id: factory_reset_btn
    name: Factory reset

microphone:
  - platform: i2s_audio
    id: echo_microphone
    i2s_din_pin: GPIO12
    adc_type: external
    pdm: false

media_player:
  - platform: i2s_audio
    id: media_out
    name: none
    dac_type: external
    i2s_dout_pin: GPIO14
    mode: mono

    on_play:
      - light.turn_on:
          id: led
          brightness: 50%
          blue: 0%
          red: 0%
          green: 100%
          effect: "Had"
    on_pause:
      - light.turn_on:
          id: led
          brightness: 50%
          blue: 0%
          red: 0%
          green: 100%
          effect: none  
 

voice_assistant:
  id: va
  noise_suppression_level: 2
  microphone: echo_microphone
  media_player: media_out
  auto_gain: 31dBFS
  
  on_listening:
    - light.turn_on:
        id: led
        blue: 100%
        red: 0%
        green: 0%
        effect: "Had"
  on_tts_start:
    - light.turn_on:
        id: led
        blue: 0%
        red: 0%
        green: 100%
        brightness: 100%
        effect: none   
  on_end:   
    - delay: 100ms
    - wait_until:
        not:
          media_player.is_playing: media_out
    - script.execute: reset_led
  on_error:
    - light.turn_on:
        id: led
        red: 100%
        green: 0%
        blue: 0%
        brightness: 100%
        effect: none
    - delay: 1s
    - script.execute: reset_led
  on_client_connected:
    - if:
        condition:
          switch.is_on: use_wake_word
        then:
          - voice_assistant.start_continuous:
          - script.execute: reset_led
  on_client_disconnected:
    - if:
        condition:
          switch.is_on: use_wake_word
        then:
          - voice_assistant.stop:
          - light.turn_off: led

binary_sensor:
  - platform: gpio
    pin:
      number: GPIO39
      inverted: true
    name: Button
    disabled_by_default: true
    entity_category: diagnostic
    id: echo_button
    on_multi_click:
      - timing:
          - ON for at least 250ms
          - OFF for at least 50ms
        then:
          - if:
              condition:
                switch.is_off: use_wake_word
              then:
                - if:
                    condition: voice_assistant.is_running
                    then:
                      - voice_assistant.stop:
                      - script.execute: reset_led
                    else:
                      - voice_assistant.start:
              else:
                - voice_assistant.stop
                - delay: 1s
                - script.execute: reset_led
                - script.wait: reset_led
                - voice_assistant.start_continuous:
      - timing:
          - ON for at least 10s
        then:
          - button.press: factory_reset_btn

light:
  - platform: esp32_rmt_led_strip
    id: led
    name: None
    disabled_by_default: true
    entity_category: config
    pin: GPIO27
    default_transition_length: 0s
    chipset: SK6812
    num_leds: 8
    rgb_order: grb
    rmt_channel: 0
    effects:
      - pulse:
          name: "Slow Pulse"
          transition_length: 250ms
          update_interval: 250ms
          min_brightness: 50%
          max_brightness: 100%
      - pulse:
          name: "Fast Pulse"
          transition_length: 100ms
          update_interval: 100ms
          min_brightness: 50%
          max_brightness: 100%
    
      - addressable_scan:
      - addressable_scan:
          name: "Had"
          move_interval: 100ms
          scan_width: 1

script:
  - id: reset_led
    then:
      - if:
          condition:
            - switch.is_on: use_wake_word
            - switch.is_on: use_listen_light
          then:
            - light.turn_on:
                id: led
                red: 100%
                green: 89%
                blue: 71%
                brightness: 60%
                effect: none
          else:
            - light.turn_off: led   
switch:
  - platform: template
    name: Probudit Hlasem
    id: use_wake_word
    optimistic: true
    restore_mode: RESTORE_DEFAULT_ON
    entity_category: config
    on_turn_on:
      - media_player.stop:
      - lambda: id(va).set_use_wake_word(true);
      - if:
          condition:
            not:
              - voice_assistant.is_running
          then:
            - voice_assistant.start_continuous
      - script.execute: reset_led
    on_turn_off:
      - voice_assistant.stop
      - lambda: id(va).set_use_wake_word(false);
      - script.execute: reset_led

  - platform: template
    name: Stavova LED
    id: use_listen_light
    optimistic: true
    restore_mode: RESTORE_DEFAULT_ON
    entity_category: config
    on_turn_on:
      - script.execute: reset_led
    on_turn_off:
      - script.execute: reset_led                   
    